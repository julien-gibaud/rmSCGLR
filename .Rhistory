### mode: outline-minor ***
### outline-regexp: "\\(> \\)?### [*]+" ***
### End: ***
quit('no')
library(rmSCGLR)
?ping.RMSCGLR
devtools::use_package("Formula")
library(devtools)
devtools::use_package("Formula")
usethis::use_package("Formula")
?as.formula
devtools::use_package("as.ormula")
usethis::::use_package("as.ormula")
usethis::use_package("as.ormula")
usethis::use_package("as.formula")
usethis::use_package("stas")
usethis::use_package("stats")
?plsr
usethis::use_package("ClustofVar")
usethis::use_package("ClustOfVar")
usethis::use_package("pls")
library(ClustOfVar)
library(rmSCGLR)
remove.packages("rmSCGLR", lib="~/R/win-library/4.0")
library(rmSCGLR)
genus
data <- genus
remove.packages("rmSCGLR", lib="~/R/win-library/4.0")
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot(res=res, thresold=0.5, group=3, plan=c(1,2))
library(rmSCGLR)
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(2,1)#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot(res=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(2,1)#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot(res=res, thresold=0.5, group=1, plan=c(1,2))
# plot the results
plot(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(2,1)#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot(x=res, thresold=0.5, group=1, plan=c(1,2))
source('~/these julien/code/code_RM_SCGLR/rmSCGLR/R/plot.R')
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
?qplot
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
qplot()
library(ggplot2)
qplot()
?plot_RMSCGLR
??cowplot
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
?grid
??grid
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
### * </HEADER>
library('rmSCGLR')
pkgname <- "rmSCGLR"
source(file.path(R.home("share"), "R", "examples-header.R"))
options(warn = 1)
options(pager = "console")
base::assign(".ExTimings", "rmSCGLR-Ex.timings", pos = 'CheckExEnv')
base::cat("name\tuser\tsystem\telapsed\n", file=base::get(".ExTimings", pos = 'CheckExEnv'))
base::assign(".format_ptime",
function(x) {
if(!is.na(x[4L])) x[1L] <- x[1L] + x[4L]
if(!is.na(x[5L])) x[2L] <- x[2L] + x[5L]
options(OutDec = '.')
format(x[1L:3L], digits = 7L)
},
pos = 'CheckExEnv')
### * </HEADER>
library('rmSCGLR')
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
library(rmSCGLR)
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- 2#c(1,1,3,1,2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=1, plan=c(1,2))
library(rmSCGLR)
?plot_RMSCGLR
remove.packages("rmSCGLR", lib="~/R/win-library/4.0")
remotes::install_github("julien-gibaud/rmSCGLR")
install.packages("tibble")
remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
library(rmSCGLR)
detach("package:rmSCGLR", unload = TRUE)
remove.packages("rmSCGLR", lib="~/R/win-library/4.0")
#vrais donn?es----
# source("Fonctions.R")
#remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
crit <- critConvergence(tol = 1e-12, maxit = 100)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H, crit = crit,
family=fam, method=met, offset = data$surface)
#vrais donn?es----
# source("Fonctions.R")
#remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
form <- multivariateFormula(Y = ny, X = nx, A = na)
fam <- rep("poisson", length(ny))
H <- c(2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0.5)
crit <- critConvergence(tol = 1e-12, maxit = 100)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H, crit = crit,
family=fam, method=met, offset = data$surface)
crit
met
#vrais donn?es----
# source("Fonctions.R")
#remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
form <- multivariateFormula(Y = ny, X = nx, A = na)
fam <- rep("poisson", length(ny))
H <- c(2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0.5)
crit <- critConvergence(tol = 1e-12, maxit = 100)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H, crit = crit,
family=fam, method=met, offset = data$surface)
#vrais donn?es----
# source("Fonctions.R")
#remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
form <- multivariateFormula(Y = ny, X = nx, A = na)
fam <- rep("poisson", length(ny))
H <- c(2,2)
met <- methodSR.RMSCGLR(l=3, s=0.1, t=0.5)
crit <- critConvergence(tol = 1e-12, maxit = 100)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H, crit = crit,
family=fam, method=met, offset = data$surface)
crit
#vrais donn?es----
# source("Fonctions.R")
#remotes::install_github("julien-gibaud/rmSCGLR")
library(rmSCGLR)
?plot_RMSCGLR
# load sample data
data <- genus
data <- as.data.frame(apply(data, 2, as.numeric ))
# get variable names from dataset
n <- names(data)
ny <- n[grep("^gen",n)]
nx <- n[-grep("^gen",n)]
na <- c("geology")
nx <- nx[!nx%in%c("geology", "surface", "forest")]
# build multivariate formula
form <- multivariateFormula(Y = ny, X = nx, A = na)
# define family
fam <- rep("poisson", length(ny))
# run function
H <- c(2,2)
met <- methodSR.RMSCGLR(l=4, s=0.1, t=0.5)
res <- ResponseMixtureSCGLR(formula=form, data=data, H=H,
family=fam, method=met, offset = data$surface)
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=3, plan=c(1,2))
# plot the results
plot_RMSCGLR(x=res, thresold=0.5, group=2, plan=c(1,2))
?ResponseMixtureSCGLR
load("CoForData.RData")
load("CoForData.RData")
library(rmSCGLR)
library(rmSCGLR)
library(rmSCGLR)
?ResponseMixtureSCGLR
